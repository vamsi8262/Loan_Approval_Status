knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
knitr::opts_chunk$set(echo = TRUE)
data<-data.frame(read.csv("/Users/shreya/Documents/GitHub/DATS-6103-FA-23-SEC-11/Team_7/Final Project/code and technical analysis/loan_approval_dataset.csv"))
str(data)
data$education<-as.factor(data$education)
data$self_employed<-as.factor(data$self_employed)
data$loan_status<-as.factor(data$loan_status)
library(dplyr)
mean_data <- data %>%
group_by(loan_status) %>%
summarise(mean_commercial_assets = mean(commercial_assets_value))
ggplot(mean_data, aes(x = loan_status, y = mean_commercial_assets, color = loan_status)) +
geom_point() +
labs(
title = "Mean Commercial Assets Value by Loan Status",
x = "Loan Status",
y = "Mean Commercial Assets Value",
color = "Loan Status"
)
Approved<-subset(data,data$loan_status==" Approved")
rejected<-subset(data,data$loan_status==" Rejected")
test<-t.test(Approved$no_of_dependents,rejected$no_of_dependents)
library("leaps")
#This is essentially best fit
reg.best10 <- regsubsets(loan_amount~. , data = data, nvmax = 10, nbest = 2, method = "exhaustive")  # leaps::regsubsets() - Model selection by exhaustive (default) search, forward or backward stepwise, or sequential replacement
#The plot will show the Adjust R^2 when using the variables across the bottom
plot(reg.best10, scale = "adjr2", main = "Adjusted R^2")
plot(reg.best10, scale = "r2", main = "R^2")
# In the "leaps" package, we can use scale=c("bic","Cp","adjr2","r2")
plot(reg.best10, scale = "bic", main = "BIC")
plot(reg.best10, scale = "Cp", main = "Cp")
summary(reg.best10)
library("bestglm")
res.bestglm <- bestglm(Xy = data, family = binomial,
IC = "AIC",                 # Information criteria for
method = "exhaustive")
library("car")
summaryRegForward = summary(reg.best10)
# Adjusted R2
car::subsets(reg.best10, statistic="adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
subsets(reg.best10, statistic="cp", legend = FALSE, min.size = 4, main = "Mallow Cp")
abline(a = 1, b = 1, lty = 3)
library("bestglm")
res.bestglm <- bestglm(Xy = data, family = binomial,
IC = "AIC",                 # Information criteria for
method = "exhaustive")
summary(res.bestglm)
res.bestglm$BestModels
summary(res.bestglm$BestModels)
plot(predict(res.bestglm$BestModel), residuals(res.bestglm$BestModel),
xlab = "Predicted Values", ylab = "Residuals",
main = "Observed vs. Predicted Values")
ggplot(data, aes(x = no_of_dependents, fill = factor(no_of_dependents))) +
geom_histogram(binwidth = .05, color = "black", alpha = 0.7) +
labs(
title = "Histogram of Number of Dependents",
x = "Number of Dependents",
y = "Frequency"
)+scale_fill_manual(name = "No. of Dependents",values = c("salmon3", "salmon1", "salmon2","salmon4","red","salmon"))
ggplot(data, aes(y = no_of_dependents, x = loan_status, fill = loan_status)) +
geom_boxplot(binwidth = 0.5, color = "black", alpha = 0.9) +
labs(
title = "Box plot of number of dependents and loan status",
x = "Loan Status",
y = "Number of Dependents"
) +
scale_fill_manual(values = c("seagreen", "salmon"))
ggplot(data, aes(x = education, fill = loan_status)) +
geom_bar(position = "dodge", color = "black", alpha = 0.7) +
labs(
title = "Bar Plot of Education and Loan Status",
x = "Education level of Applicant",
y = "Frequency"
)+scale_fill_manual(values = c("seagreen", "salmon"))
ggplot(data, aes(x = commercial_assets_value, fill = loan_status)) +
geom_histogram(binwidth = 500000, position = "identity", alpha = 0.7) +
labs(
title = "Histogram of Commercial Assets Value by Loan Status",
x = "Commercial Assets Value",
y = "Frequency"
)+scale_x_continuous(labels = comma_format(scale = 1e-6,suffix = "M"), breaks = seq(0, 35000000, by = 5000000))
library(dplyr)
mean_data <- data %>%
group_by(loan_status) %>%
summarise(mean_commercial_assets = mean(commercial_assets_value))
ggplot(mean_data, aes(x = loan_status, y = mean_commercial_assets, color = loan_status)) +
geom_point() +
labs(
title = "Mean Commercial Assets Value by Loan Status",
x = "Loan Status",
y = "Mean Commercial Assets Value",
color = "Loan Status"
)
ggplot(data, aes(x= cibil_score, y = loan_amount, color = loan_status)) +
geom_point() +
labs(title = "Scatter Plot of CIBIL Score vs Loan Amount",
x = "CIBIL Score",
y = "Loan Amount") +
scale_color_manual(values = c("seagreen", "salmon")) + scale_x_continuous(breaks = seq(min(data$cibil_score), max(data$cibil_score), by = 50))+scale_y_continuous(labels = comma_format(scale = 1e-6,suffix = "M"), breaks = seq(0, 35000000, by = 5000000))
ggplot(data, aes(x= residential_assets_value, y = loan_amount, color = loan_status)) +
geom_point() +
labs(title = "Scatter Plot of CIBIL Score vs Loan Amount",
x = "Residential Assets value",
y = "Loan Amount") +
scale_color_manual(values = c("seagreen", "salmon"))
ggplot(data, aes(x= income_annum, y = loan_amount, color = loan_status)) +
geom_point() +
labs(title = "Scatter Plot of income annum vs Loan Amount",
x = "Income annum",
y = "Loan Amount") +
scale_color_manual(values = c("seagreen", "salmon"))
Approved<-subset(data,data$loan_status==" Approved")
rejected<-subset(data,data$loan_status==" Rejected")
test<-t.test(Approved$no_of_dependents,rejected$no_of_dependents)
Approved<-subset(data,data$loan_status==" Approved")
rejected<-subset(data,data$loan_status==" Rejected")
test<-t.test(Approved$no_of_dependents,rejected$no_of_dependents)
test
c<-table(data$education, data$loan_status)
c_test2<-chisq.test(c)
c_test2
str(data)
library("leaps")
#This is essentially best fit
reg.best10 <- regsubsets(loan_amount~. , data = data, nvmax = 10, nbest = 2, method = "exhaustive")  # leaps::regsubsets() - Model selection by exhaustive (default) search, forward or backward stepwise, or sequential replacement
#The plot will show the Adjust R^2 when using the variables across the bottom
plot(reg.best10, scale = "adjr2", main = "Adjusted R^2")
plot(reg.best10, scale = "r2", main = "R^2")
# In the "leaps" package, we can use scale=c("bic","Cp","adjr2","r2")
plot(reg.best10, scale = "bic", main = "BIC")
plot(reg.best10, scale = "Cp", main = "Cp")
summary(reg.best10)
Approved<-subset(data,data$loan_status==" Approved")
rejected<-subset(data,data$loan_status==" Rejected")
test<-t.test(Approved$no_of_dependents,rejected$no_of_dependents)
test
